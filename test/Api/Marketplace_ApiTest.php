<?php
/**
 * Marketplace_ApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Wildberries\Client
 * @author   Wildberries Codegen team
 * @link     https://github.com/Wildberries-api/Wildberries-codegen
 */

/**
 * API продавца
 *
 * # Общее описание <style> .version {   border: 0.1rem #b3b3b3 solid;   background-color: #F9F9F9;   color: #32329FE6;   height: 25px;   width: 150px;   text-align: center }, </style> <style> .warning {   border: 1.6rem #b3b3b3 solid;   background-color: #F9F9F9;   color: #247706;   text-align: center } </style>  Wildberries API предоставляет продавцам возможность управления магазином и получения оперативной и статистической информации по протоколу HTTP RestAPI. <br> Описание API предоставляется в формате [Wildberries](https://Wildberries.io/) (Open API) и может быть использовано для импорта в другие инструменты (такие как PostMan) или генерации клиентского кода на различных языках программирования с помощью [Wildberries CodeGen](https://Wildberries.io/tools/Wildberries-codegen/)  <ul> <li> Описание в оригинальном Wildberries-формате <a href=\"/Wildberries\">Wildberries</a> <li> OpenAPI-файл <a href=\"/Wildberries.yaml\">Wildberries.yaml</a> </ul>  <br> Для ручной проверки API вы можете использовать: <ul> <li> Под ОС Windows - [PostMan](https://www.postman.com/) <li> Под ОС Linux - [curl](https://curl.se/)  </ul>  ## Поддержка <br> Техническая поддержка осуществляется через обращения в личном кабинете продавца. При создании нового обращения в техподдержку используйте категорию API. <br> Новости и изменения, касающиеся API, публикуются в [новостной ленте Wildberries](https://seller.wildberries.ru/news). <br> Также готовятся к публикации Release Notes по API на сайте.  После их выхода будет сделан соответствующий анонс.   ## Авторизация Авторизация осуществляется по ключам API, которые  владелец личного кабинета (главный пользователь) самостоятельно  генерирует в разделе   [Профиль --> Настройки --> Доступ к новому API](https://seller.wildberries.ru/supplier-settings/access-to-new-api). <br>Обратите внимание, что ключ отображается ТОЛЬКО в момент создания. Его надо сохранить, потому что больше его отобразить будет нельзя. <br>Созданный ключ следует добавлять в каждый запрос, прибавляя к запросу заголовок (http-header) формата `Authorization: .........`. <br> <br>Внимание! Изменился домен для методов статистики, актуальный: https://statistics-api.wildberries.ru ## Форматы ### Дата и время Во всех методах API статистики дата и время передаются в формате [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).  <br> В большинстве случаев вы можете передать дату или дату со временем. Если время не указано, оно принимается равным 00:00:00. Время можно указывать с точностью до секунд или миллисекунд.  Литера `Z` в конце строки означает часовой пояс UTC. При ее отсутствии время считается в часовом поясе МСК (UTC+3). <br> Примеры: <ul> <li> `2019-06-20` <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T23:59:59` <li> `2019-06-20T00:00:00.12345Z` <li> `2019-06-20T00:00:00.12345` <li> `2017-03-25T00:00:00` </ul> ## Release Notes    #### 2023.01.13 v1.7      Добавлено описание API рекламы  #### 2022.12.21 v1.6 Добавлена инструкция по загрузке статистики в Excel #### 2022.12.15 v1.5  Новая авторизация для методов API статистики 2022.12.15 в v1.5: #### 2022.10.31 v1.4  Метод будет отключен 2022.10.31 в v1.4: <ul> <li> `/content/v1/cards/list` </ul>  #### 2022.09.20 v1.2  В связи с переходом на новое API Контента старые методы будут отключены. К их числу относятся: <ul> <li> `/card/_*` <li> `/api/v1/config/_*` <li> `/api/v1/directory/_*` </ul> Данные методы теперь возвращают код 404.  Новое API Контента описано в данном документе в разделах Контент / *
 *
 * OpenAPI spec version: 1.7
 * 
 * Generated by: https://github.com/Wildberries-api/Wildberries-codegen.git
 * Wildberries Codegen version: 3.0.37
 */
/**
 * NOTE: This class is auto generated by the Wildberries code generator program.
 * https://github.com/Wildberries-api/Wildberries-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Wildberries\Client;

use Wildberries\Client\Configuration;
use Wildberries\Client\ApiException;
use Wildberries\Client\ObjectSerializer;

/**
 * Marketplace_ApiTest Class Doc Comment
 *
 * @category Class
 * @package  Wildberries\Client
 * @author   Wildberries Codegen team
 * @link     https://github.com/Wildberries-api/Wildberries-codegen
 */
class Marketplace_ApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for apiV2WarehousesGet
     *
     * Cписок складов.
     *
     */
    public function testApiV2WarehousesGet()
    {
    }

    /**
     * Test case for apiV3OrdersGet
     *
     * Получить информацию по сборочным заданиям.
     *
     */
    public function testApiV3OrdersGet()
    {
    }

    /**
     * Test case for apiV3OrdersNewGet
     *
     * Получить список новых сборочных заданий.
     *
     */
    public function testApiV3OrdersNewGet()
    {
    }

    /**
     * Test case for apiV3OrdersOrderCancelPatch
     *
     * Отменить сборочное задание.
     *
     */
    public function testApiV3OrdersOrderCancelPatch()
    {
    }

    /**
     * Test case for apiV3OrdersOrderMetaSgtinPost
     *
     * Закрепить за сборочным заданием КиЗ (маркировку Честного знака).
     *
     */
    public function testApiV3OrdersOrderMetaSgtinPost()
    {
    }

    /**
     * Test case for apiV3OrdersStatusPost
     *
     * Получить статусы сборочных заданий.
     *
     */
    public function testApiV3OrdersStatusPost()
    {
    }

    /**
     * Test case for apiV3OrdersStickersPost
     *
     * Получить этикетки для сборочных заданий.
     *
     */
    public function testApiV3OrdersStickersPost()
    {
    }

    /**
     * Test case for apiV3StocksWarehouseDelete
     *
     * Удалить остатки товаров.
     *
     */
    public function testApiV3StocksWarehouseDelete()
    {
    }

    /**
     * Test case for apiV3StocksWarehousePost
     *
     * Получить остатки товаров.
     *
     */
    public function testApiV3StocksWarehousePost()
    {
    }

    /**
     * Test case for apiV3StocksWarehousePut
     *
     * Обновить остатки товаров.
     *
     */
    public function testApiV3StocksWarehousePut()
    {
    }

    /**
     * Test case for apiV3SuppliesGet
     *
     * Получить список поставок.
     *
     */
    public function testApiV3SuppliesGet()
    {
    }

    /**
     * Test case for apiV3SuppliesOrdersReshipmentGet
     *
     * Получить все сборочные задания на повторную отгрузку.
     *
     */
    public function testApiV3SuppliesOrdersReshipmentGet()
    {
    }

    /**
     * Test case for apiV3SuppliesPost
     *
     * Создать новую поставку.
     *
     */
    public function testApiV3SuppliesPost()
    {
    }

    /**
     * Test case for apiV3SuppliesSupplyBarcodeGet
     *
     * Получить QR поставки.
     *
     */
    public function testApiV3SuppliesSupplyBarcodeGet()
    {
    }

    /**
     * Test case for apiV3SuppliesSupplyDelete
     *
     * Удалить поставку.
     *
     */
    public function testApiV3SuppliesSupplyDelete()
    {
    }

    /**
     * Test case for apiV3SuppliesSupplyDeliverPatch
     *
     * Передать поставку в доставку.
     *
     */
    public function testApiV3SuppliesSupplyDeliverPatch()
    {
    }

    /**
     * Test case for apiV3SuppliesSupplyGet
     *
     * Получить информацию о поставке.
     *
     */
    public function testApiV3SuppliesSupplyGet()
    {
    }

    /**
     * Test case for apiV3SuppliesSupplyOrdersGet
     *
     * Получить сборочные задания в поставке.
     *
     */
    public function testApiV3SuppliesSupplyOrdersGet()
    {
    }

    /**
     * Test case for apiV3SuppliesSupplyOrdersOrderPatch
     *
     * Добавить к поставке сборочное задание.
     *
     */
    public function testApiV3SuppliesSupplyOrdersOrderPatch()
    {
    }
}
